name: Deploy NuGet Package

on:
  workflow_dispatch:
    branches: [master]

jobs:
  generate_schemas:
    uses: ./.github/workflows/generate_schemas.yml
  build_rust_crates:
    uses: ./.github/workflows/build-rust-crates.yml

  deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Get Package Version
        id: version
        run: |
          cd languages/csharp
          package_version=$(dotnet pack --configuration Release --no-build /property:Version=1.2.3 --output ./nuget-output /nologo /v:n)
          echo "Package Version: $package_version"
          echo "::set-output name=version::$package_version"

      - name: Check Existing Version on NuGet.org
        id: check_version
        run: |
          existing_version=$(dotnet nuget list source-package-name -s https://api.nuget.org/v3/index.json --version ${{ steps.version.outputs.version }} | grep -oP '(?<=Version: )[^,]+')
          echo "Existing Version: $existing_version"
          if [ -n "$existing_version" ]; then
            echo "Package version already exists on NuGet.org."
            echo "::set-output name=exists::true"
          else
            echo "Package version does not exist on NuGet.org."
            echo "::set-output name=exists::false"
          fi

      - name: Publish NuGet Package
        if: steps.check_version.outputs.exists == 'false'
        run: dotnet nuget push ./languages/csharp/nuget-output/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json
