name: Deploy NuGet Package

on:
  pull_request:

jobs:
  generate_schemas:
    uses: ./.github/workflows/generate_schemas.yml

  build_rust:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        arch: [x86_64, arm64]
        exclude:
          - os: windows-latest
            arch: arm64
          - os: ubuntu-latest
            arch: arm64

    runs-on: ${{ matrix.os }}

    name: Build for ${{ matrix.os }} ${{ matrix.arch }}

    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Install rust
        uses: dtolnay/rust-toolchain@f361669954a8ecfc00a3443f35f9ac8e610ffc06 # stable
        with:
          toolchain: stable

      - name: Cache cargo registry
        uses: Swatinem/rust-cache@e207df5d269b42b69c8bc5101da26f7d31feddb4 # v2.6.2

      - name: Set build architecture, ios, linux
        if: matrix.os != 'windows-latest'
        run: |
          if [[ "${{ matrix.arch }}" == "x86_64" ]]; then
            echo "TARGET_ARCH=" >> $GITHUB_ENV
            echo "TARGET_FOLDER=target/release/" >> $GITHUB_ENV
          elif [[ "${{ matrix.arch }}" == "arm64" ]]; then
            echo "TARGET_ARCH=--target aarch64-apple-darwin" >> $GITHUB_ENV
            echo "TARGET_FOLDER=target/aarch64-apple-darwin/release/" >> $GITHUB_ENV
          fi

      - name: Set build architecture, windows
        if: matrix.os == 'windows-latest'
        run: |
            echo "TARGET_ARCH=" >> $GITHUB_ENV
            echo "TARGET_FOLDER=target/release/" >> $GITHUB_ENV

      - name: Build Rust
        run: cargo build ${{ env.TARGET_ARCH }} --release
        env:
          RUSTFLAGS: "-D warnings"

      - name: Upload Artifact
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: libbitwarden_c_files/${{ matrix.os }}-${{ matrix.arch }}
          path: |
            ${{ env.TARGET_FOLDER }}/*bitwarden_c*

  deploy:
    runs-on: ubuntu-22.04
    needs: [generate_schemas, build_rust]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Download c# schemas artifact
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: schemas.cs
          path: languages/csharp

      - name: Download libbitwarden_c_files/macos-latest-x86 files
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: libbitwarden_c_files/macos-latest-x86
          path: languages/csharp/macos-latest-x86

      - name: Download libbitwarden_c_files/macos-latest-x64 files
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: libbitwarden_c_files/macos-latest-x64
          path: languages/csharp/macos-latest-x64

      - name: Download libbitwarden_c_files/macos-latest-arm64 files
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: libbitwarden_c_files/macos-latest-arm64
          path: languages/csharp/macos-latest-arm64

      - name: Download libbitwarden_c_files/ubuntu-latest-x86 files
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: libbitwarden_c_files/ubuntu-latest-x86
          path: languages/csharp/ubuntu-latest-x86

      - name: Download libbitwarden_c_files/ubuntu-latest-x64 files
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: libbitwarden_c_files/ubuntu-latest-x64
          path: languages/csharp/ubuntu-latest-x64

      - name: Download libbitwarden_c_files/ubuntu-latest-arm64 files
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: libbitwarden_c_files/ubuntu-latest-arm64
          path: languages/csharp/ubuntu-latest-arm64

      - name: Download libbitwarden_c_files/windows-latest-x86 files
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: libbitwarden_c_files/windows-latest-x86
          path: languages/csharp/windows-latest-x86

      - name: Download libbitwarden_c_files/windows-latest-x64 files
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: libbitwarden_c_files/windows-latest-x64
          path: languages/csharp/windows-latest-x64

      - name: Download libbitwarden_c_files/windows-latest-arm64 files
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: libbitwarden_c_files/windows-latest-arm64
          path: languages/csharp/windows-latest-arm64

      - name: List libbitwarden_c_files
        run: |
          ls -1 languages/csharp # one per line

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "6.0.x"

      - name: Get Package Version
        id: version
        env:
          VERSION: 1.0.4
        run: |
          cd languages/csharp
          dotnet pack --configuration Release /property:Version=${VERSION} --output ./nuget-output /nologo /v:n

      - name: Publish NuGet Package
        run: dotnet nuget push ./languages/csharp/nuget-output/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json
