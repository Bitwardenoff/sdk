name: Deploy NuGet Package

on:
  pull_request:

jobs:
  generate_schemas:
    uses: ./.github/workflows/generate_schemas.yml

  build_rust:
    name: Building ${{matrix.package}} for - ${{ matrix.os }}

    runs-on: ${{ matrix.settings.os || 'ubuntu-latest' }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest

        package:
          - bitwarden
          - bitwarden-api-api
          - bitwarden-api-identity

    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Install rust
        uses: dtolnay/rust-toolchain@f361669954a8ecfc00a3443f35f9ac8e610ffc06 # stable
        with:
          toolchain: stable
          targets: ${{ matrix.settings.target }}

      - name: Cache cargo registry
        uses: Swatinem/rust-cache@e207df5d269b42b69c8bc5101da26f7d31feddb4 # v2.6.2

      - name: Build
        run: cargo build -p ${{ matrix.package }} --release
        env:
          RUSTFLAGS: "-D warnings"

      - name: Find and Upload libbitwarden_c Files
        run: |
          find target/release -type f -name '*libbitwarden_c*' -exec cp {} $GITHUB_WORKSPACE/ \;
        shell: bash

      - name: Upload Artifact
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: libbitwarden_c_files
          path: target/release

  deploy:
    runs-on: ubuntu-22.04
    needs: [generate_schemas, build_rust]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3

      - name: Download c# schemas artifact
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: schemas.cs
          path: languages/csharp

      - name: Download libbitwarden_c files
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: libbitwarden_c_files
          path: languages/csharp

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "6.0.x"

      - name: Get Package Version
        id: version
        env:
          VERSION: 1.0.2
        run: |
          cd languages/csharp
          dotnet pack --configuration Release /property:Version=${VERSION} --output ./nuget-output /nologo /v:n

      - name: Publish NuGet Package
        run: dotnet nuget push ./languages/csharp/nuget-output/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json
