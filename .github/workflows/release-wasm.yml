---
name: Release @bitwarden/sdk-wasm
run-name: Release @bitwarden/sdk-wasm ${{ inputs.release_type }}

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release Options"
        required: true
        default: "Release"
        type: choice
        options:
          - Release
          - Dry Run
      npm_publish:
        description: "Publish to NPM registry"
        required: true
        default: true
        type: boolean

defaults:
  run:
    shell: bash
    working-directory: languages/js/wasm

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-22.04
    outputs:
      release-version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Branch check
        if: ${{ github.event.inputs.release_type != 'Dry Run' }}
        run: |
          if [[ "$GITHUB_REF" != "refs/heads/rc" ]] && [[ "$GITHUB_REF" != "refs/heads/hotfix-rc" ]]; then
            echo "==================================="
            echo "[!] Can only release from the 'rc' or 'hotfix-rc' branches"
            echo "==================================="
            exit 1
          fi

      - name: Check Release Version
        id: version
        uses: bitwarden/gh-actions/release-version-check@main
        with:
          release-type: ${{ github.event.inputs.release_type }}
          project-type: ts
          file: languages/js/wasm/package.json
          monorepo: false

      - name: Create GitHub deployment
        if: ${{ github.event.inputs.release_type != 'Dry Run' }}
        uses: chrnorm/deployment-action@55729fcebec3d284f60f5bcabbd8376437d696b1 # v2.0.7
        id: deployment
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          initial-status: "in_progress"
          environment: "Bitwarden SDK WASM - Production"
          description: "Deployment ${{ steps.version.outputs.version }} from branch ${{ github.ref_name }}"
          task: release

      - name: Update deployment status to Success
        if: ${{ github.event.inputs.release_type != 'Dry Run' && success() }}
        uses: chrnorm/deployment-status@9a72af4586197112e0491ea843682b5dc280d806 # v2.0.3
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          state: "success"
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status to Failure
        if: ${{ github.event.inputs.release_type != 'Dry Run' && failure() }}
        uses: chrnorm/deployment-status@9a72af4586197112e0491ea843682b5dc280d806 # v2.0.3
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          state: "failure"
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

  npm:
    name: Publish NPM
    runs-on: ubuntu-22.04
    needs: setup
    if: inputs.npm_publish
    env:
      _PKG_VERSION: ${{ needs.setup.outputs.release-version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Setup Node
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version: 18
          cache: "npm"

      - name: Login to Azure
        uses: Azure/login@e15b166166a8746d1a47596803bd8c1b595455cf # v1.6.0
        with:
          creds: ${{ secrets.AZURE_KV_CI_SERVICE_PRINCIPAL }}

      - name: Retrieve secrets
        id: retrieve-secrets
        uses: bitwarden/gh-actions/get-keyvault-secrets@main
        with:
          keyvault: "bitwarden-ci"
          secrets: "npm-api-key"

      - name: Download artifacts
        uses: bitwarden/gh-actions/download-artifacts@main
        with:
          workflow: build-wasm.yml
          path: ${{ github.workspace }}/languages/js/wasm
          workflow_conclusion: success
          branch: ${{ github.event.inputs.release_type == 'Dry Run' && 'main' ||  github.ref_name }}

      - name: Setup NPM
        run: |
          echo 'registry="https://registry.npmjs.org/"' > ./.npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ./.npmrc

          echo 'registry="https://registry.npmjs.org/"' > ~/.npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
        env:
          NPM_TOKEN: ${{ steps.retrieve-secrets.outputs.npm-api-key }}

      - name: Publish NPM
        if: ${{ github.event.inputs.release_type != 'Dry Run' }}
        run: npm publish --access public --registry=https://registry.npmjs.org/  --userconfig=./.npmrc
