---
name: Release CLI
run-name: Release CLI ${{ inputs.release_type }}

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release Options"
        required: true
        default: "Release"
        type: choice
        options:
          - Release
          - Dry Run

defaults:
  run:
    shell: bash

env:
  _AZ_REGISTRY: bitwardenprod.azurecr.io

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-22.04
    outputs:
      release-version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4

      - name: Branch check
        if: ${{ github.event.inputs.release_type != 'Dry Run' }}
        run: |
          if [[ "$GITHUB_REF" != "refs/heads/rc" ]] && [[ "$GITHUB_REF" != "refs/heads/hotfix-rc-cli" ]]; then
            echo "==================================="
            echo "[!] Can only release from the 'rc' or 'hotfix-rc-cli' branches"
            echo "==================================="
            exit 1
          fi

      - name: Check Release Version
        id: version
        run: |
          VERSION=$(grep -o '^version = ".*"' crates/bws/Cargo.toml | grep -Eo "[0-9]+\.[0-9]+\.[0-9]+")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub deployment
        if: ${{ github.event.inputs.release_type != 'Dry Run' }}
        uses: chrnorm/deployment-action@55729fcebec3d284f60f5bcabbd8376437d696b1 # v2.0.7
        id: deployment
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          initial-status: "in_progress"
          environment: "CLI - Production"
          description: "Deployment ${{ steps.version.outputs.version }} from branch ${{ github.ref_name }}"
          task: release

      - name: Download all Release artifacts
        if: ${{ github.event.inputs.release_type != 'Dry Run' }}
        uses: bitwarden/gh-actions/download-artifacts@main
        with:
          workflow: build-cli.yml
          path: packages
          workflow_conclusion: success
          branch: ${{ github.ref_name }}

      - name: Dry Run - Download all artifacts
        if: ${{ github.event.inputs.release_type == 'Dry Run' }}
        uses: bitwarden/gh-actions/download-artifacts@main
        with:
          workflow: build-cli.yml
          path: packages
          workflow_conclusion: success
          branch: main

      - name: Get checksum files
        uses: bitwarden/gh-actions/get-checksum@main
        with:
          packages_dir: "packages"
          file_path: "packages/bws-sha256-checksums-${{ steps.version.outputs.version }}.txt"

      - name: Create release
        if: ${{ github.event.inputs.release_type != 'Dry Run' }}
        uses: ncipollo/release-action@2c591bcc8ecdcd2db72b97d6147f871fcd833ba5 # v1.14.0
        env:
          PKG_VERSION: ${{ steps.version.outputs.version }}
        with:
          artifacts: "packages/bws-x86_64-apple-darwin-${{ env.PKG_VERSION }}.zip,
            packages/bws-aarch64-apple-darwin-${{ env.PKG_VERSION }}.zip,
            packages/bws-macos-universal-${{ env.PKG_VERSION }}.zip,
            packages/bws-x86_64-pc-windows-msvc-${{ env.PKG_VERSION }}.zip,
            packages/bws-aarch64-pc-windows-msvc-${{ env.PKG_VERSION }}.zip,
            packages/bws-x86_64-unknown-linux-gnu-${{ env.PKG_VERSION }}.zip,
            packages/bws-aarch64-unknown-linux-gnu-${{ env.PKG_VERSION }}.zip,
            packages/THIRDPARTY.html,
            packages/bws-sha256-checksums-${{ env.PKG_VERSION }}.txt"
          commit: ${{ github.sha }}
          tag: bws-v${{ env.PKG_VERSION }}
          name: bws CLI v${{ env.PKG_VERSION }}
          body: "<insert release notes here>"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true

      - name: Update deployment status to Success
        if: ${{ github.event.inputs.release_type != 'Dry Run' && success() }}
        uses: chrnorm/deployment-status@9a72af4586197112e0491ea843682b5dc280d806 # v2.0.3
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          state: "success"
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status to Failure
        if: ${{ github.event.inputs.release_type != 'Dry Run' && failure() }}
        uses: chrnorm/deployment-status@9a72af4586197112e0491ea843682b5dc280d806 # v2.0.3
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          state: "failure"
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

  publish:
    name: Publish bws to crates.io
    runs-on: ubuntu-22.04
    needs:
      - setup
    steps:
      - name: Checkout
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4

      - name: Login to Azure
        uses: Azure/login@e15b166166a8746d1a47596803bd8c1b595455cf # v1.6.0
        with:
          creds: ${{ secrets.AZURE_KV_CI_SERVICE_PRINCIPAL }}

      - name: Retrieve secrets
        id: retrieve-secrets
        uses: bitwarden/gh-actions/get-keyvault-secrets@main
        with:
          keyvault: "bitwarden-ci"
          secrets: "cratesio-api-token"

      - name: Install rust
        uses: dtolnay/rust-toolchain@bb45937a053e097f8591208d8e74c90db1873d07 # stable
        with:
          toolchain: stable

      - name: Cache cargo registry
        uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2.7.3

      - name: Install cargo-release
        run: cargo install cargo-release

      - name: Cargo release
        if: ${{ github.event.inputs.release_type != 'Dry Run' }}
        env:
          PUBLISH_GRACE_SLEEP: 10
          CARGO_REGISTRY_TOKEN: ${{ steps.retrieve-secrets.outputs.cratesio-api-token }}
        run: cargo-release release publish -p bws --execute --no-confirm

  publish-docker:
    name: Publish docker versioned and latest image
    runs-on: ubuntu-22.04
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4

      - name: Generate tag list
        id: tag-list
        env:
          VERSION: ${{ needs.setup.outputs.release-version }}
          DRY_RUN: ${{ inputs.release_type == 'Dry Run' }}
        run: |
          if [[ "${DRY_RUN}" == "true" ]]; then
            REF=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
            IMAGE_TAG=$(echo "${REF}" | sed "s#/#-#g")  # slash safe branch name
            echo "tags=$_AZ_REGISTRY/bws:${IMAGE_TAG},bitwarden/bws:${IMAGE_TAG}" >> $GITHUB_OUTPUT
          else
            echo "tags=$_AZ_REGISTRY/bws:${VERSION},bitwarden/bws:${VERSION},$_AZ_REGISTRY/bws:latest,bitwarden/bws:latest" >> $GITHUB_OUTPUT
          fi

      ########## Set up Docker ##########
      - name: Set up QEMU emulators
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3.3.0

      ########## Login to Docker registries ##########
      - name: Login to Azure - Prod Subscription
        uses: Azure/login@e15b166166a8746d1a47596803bd8c1b595455cf # v1.6.0
        with:
          creds: ${{ secrets.AZURE_PROD_KV_CREDENTIALS }}

      - name: Login to Azure ACR
        run: az acr login -n ${_AZ_REGISTRY%.azurecr.io}

      - name: Login to Azure - CI Subscription
        uses: Azure/login@e15b166166a8746d1a47596803bd8c1b595455cf # v1.6.0
        with:
          creds: ${{ secrets.AZURE_KV_CI_SERVICE_PRINCIPAL }}

      - name: Retrieve github PAT secrets
        id: retrieve-secret-pat
        uses: bitwarden/gh-actions/get-keyvault-secrets@main
        with:
          keyvault: "bitwarden-ci"
          secrets: "github-pat-bitwarden-devops-bot-repo-scope"

      - name: Setup Docker Trust
        uses: bitwarden/gh-actions/setup-docker-trust@main
        with:
          azure-creds: ${{ secrets.AZURE_KV_CI_SERVICE_PRINCIPAL }}
          azure-keyvault-name: "bitwarden-ci"

      - name: Build and push Docker image
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          context: .
          file: crates/bws/Dockerfile
          platforms: |
            linux/amd64,
            linux/arm64/v8
          push: ${{ inputs.release_type != 'Dry Run' }}
          tags: ${{ steps.tag-list.outputs.tags }}
          secrets: |
            "GH_PAT=${{ steps.retrieve-secret-pat.outputs.github-pat-bitwarden-devops-bot-repo-scope }}"

      - name: Log out of Docker and disable Docker Notary
        if: ${{ github.event.inputs.release_type != 'Dry Run' }}
        run: |
          docker logout
          echo "DOCKER_CONTENT_TRUST=0" >> $GITHUB_ENV
