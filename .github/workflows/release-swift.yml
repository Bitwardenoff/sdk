---
name: Release Swift Package
run-name: Release Swift Package ${{ inputs.release_type }}

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release Options"
        required: true
        default: "Initial Release"
        type: choice
        options:
          - Initial Release
          - Redeploy
          - Dry Run

env:
  _KEY_VAULT: "bitwarden-ci"

jobs:
  validate:
    name: Validate Branch - Set Version
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0

      - name: Branch check
        if: ${{ github.event.inputs.release_type != 'Dry Run' }}
        run: |
          if [[ "$GITHUB_REF" != "refs/heads/rc" ]] && [[ "$GITHUB_REF" != "refs/heads/hotfix-rc" ]]; then
            echo "==================================="
            echo "[!] Can only release from the 'rc' or 'refs/heads/hotfix-rc' branches"
            echo "==================================="
            exit 1
          fi

      - name: Get version
        id: version
        run: |
          VERSION=$(grep -o '^version = ".*"' crates/bitwarden/Cargo.toml | grep -Eo "[0-9]+\.[0-9]+\.[0-9]+")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  repo-sync:
    name: Push changed files to SDK Swift repo
    runs-on: ubuntu-22.04
    needs: validate
    env:
      _BOT_EMAIL: 106330231+bitwarden-devops-bot@users.noreply.github.com
      _BOT_NAME: bitwarden-devops-bot
      _PKG_VERSION: ${{ needs.validate.outputs.version }}
    steps:
      - name: Checkout SDK repo
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
        with:
          path: sdk

      - name: Checkout SDK-Swift repo
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
        with:
          repository: bitwarden/sdk-swift
          path: sdk-swift
          ref: main

      - name: Login to Azure - Prod Subscription
        uses: Azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2 # v1.4.7
        with:
          creds: ${{ secrets.AZURE_CI_SERVICE_PRINCIPAL }}

      - name: Retrieve secrets
        id: retrieve-secrets
        uses: bitwarden/gh-actions/get-keyvault-secrets@main
        with:
          keyvault: ${{ env._KEY_VAULT }}
          secrets: "github-pat-bitwarden-devops-bot-repo-scope"

      - name: Setup Git
        working-directory: sdk-swift
        run: |
          git config --local user.email "${{ env._BOT_EMAIL }}"
          git config --local user.name "${{ env._BOT_NAME }}"

      - name: Update files
        run: |
          # Update BitwardenFFI path
          sed -i '' 's|.binaryTarget(name: "BitwardenFFI", path: "BitwardenFFI.xcframework")|.binaryTarget(\
            name: "BitwardenFFI",\
            url: "https://github.com/bitwarden/sdk-swift/releases/download/BitwardenFFI-v${{ env._PKG_VERSION }}/BitwardenFFI-${{ env._PKG_VERSION }}.xcframework.zip",|' sdk/languages/swift/Package.swift

          # Run swiftformat
          swiftformat sdk/languages/swift/Package.swift

          # Copy files to local sdk-swift repo path
          cp --verbose -rf sdk/languages/swift/README.md sdk-swift/README.md
          cp --verbose -rf sdk/languages/swift/Package.swift sdk-swift/Package.swift
          cp --verbose -rf sdk/languages/swift/Sources sdk-swift/Sources
          cp --verbose -rf sdk/languages/swift/Tests sdk-swift/Tests

      - name: Push changes
        working-directory: sdk-swift
        run: |
          git add .
          git commit -m "Update Swift SDK to ${{ github.sha }}"

          if [[ "${{ github.event.inputs.release_type }}" == "Dry Run" ]]; then
            echo "==================================="
            echo "[!] Dry Run - Skipping push"
            echo "==================================="
            git ls-files -m
            exit 0
          else 
            git push origin main
          fi

      - name: Create release tag on SDK Swift repo
        if: ${{ github.event.inputs.release_type != 'Dry Run' }}
        working-directory: sdk-swift
        run: |
          # Check if tag exists, set output then exit 0 if true.
          if git log ${{ env._PKG_VERSION }} >/dev/null 2>&1; then
            echo "==================================="
            echo "[!] Tag ${{ env._PKG_VERSION }} already exists"
            echo "==================================="
            exit 1
          fi

          git tag ${{ env._PKG_VERSION }}
          git push origin ${{ env._PKG_VERSION }}

  github-release:
    name: GitHub Release
    runs-on: ubuntu-22.04
    needs:
      - validate
      - repo-sync
    env:
      _PKG_VERSION: ${{ needs.validate.outputs.version }}
    steps:
      - name: Login to Azure - Prod Subscription
        uses: Azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2 # v1.4.7
        with:
          creds: ${{ secrets.AZURE_CI_SERVICE_PRINCIPAL }}

      - name: Retrieve secrets
        id: retrieve-secrets
        uses: bitwarden/gh-actions/get-keyvault-secrets@main
        with:
          keyvault: ${{ env._KEY_VAULT }}
          secrets: "github-pat-bitwarden-devops-bot-repo-scope"

      - name: Download BitwardenEFI artifact
        uses: bitwarden/gh-actions/download-artifacts@main
        with:
          workflow: build-swift.yml
          artifacts: BitwardenFFI-${{ env._PKG_VERSION }}.xcframework
          workflow_conclusion: success
          branch: ${{ github.event.inputs.release_type == 'Dry Run' && 'master' || github.ref_name }}
          skip_unpack: true

      - name: Create release
        if: ${{ inputs.release_type != 'Dry Run' }}
        uses: ncipollo/release-action@6c75be85e571768fa31b40abf38de58ba0397db5 # v1.13.0
        with:
          tag: v${{ env._PKG_VERSION }}
          name: v${{ env._PKG_VERSION }}
          body: "<insert release notes here>"
          token: ${{ steps.retrieve-secrets.outputs.github-pat-bitwarden-devops-bot-repo-scope }}
          draft: true
          repo: sdk-swift
          owner: bitwarden
          artifacts: "BitwardenFFI-${{ env._PKG_VERSION }}.xcframework"
