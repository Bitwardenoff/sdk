/*
 * Bitwarden Internal API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 *
 * Generated by: https://openapi-generator.tech
 */

///
#[repr(i64)]
#[derive(
    Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize_repr, Deserialize_repr,
)]
pub enum DeviceType {
    Android = 0,
    iOS = 1,
    ChromeExtension = 2,
    FirefoxExtension = 3,
    OperaExtension = 4,
    EdgeExtension = 5,
    WindowsDesktop = 6,
    MacOsDesktop = 7,
    LinuxDesktop = 8,
    ChromeBrowser = 9,
    FirefoxBrowser = 10,
    OperaBrowser = 11,
    EdgeBrowser = 12,
    IEBrowser = 13,
    UnknownBrowser = 14,
    AndroidAmazon = 15,
    UWP = 16,
    SafariBrowser = 17,
    VivaldiBrowser = 18,
    VivaldiExtension = 19,
    SafariExtension = 20,
    SDK = 21,
    Server = 22,
    WindowsCLI = 23,
    MacOsCLI = 24,
    LinuxCLI = 25,

    #[serde(other)]
    UnknownValue = -1337,
}

impl ToString for DeviceType {
    fn to_string(&self) -> String {
        match self {
            Self::Android => String::from("0"),
            Self::iOS => String::from("1"),
            Self::ChromeExtension => String::from("2"),
            Self::FirefoxExtension => String::from("3"),
            Self::OperaExtension => String::from("4"),
            Self::EdgeExtension => String::from("5"),
            Self::WindowsDesktop => String::from("6"),
            Self::MacOsDesktop => String::from("7"),
            Self::LinuxDesktop => String::from("8"),
            Self::ChromeBrowser => String::from("9"),
            Self::FirefoxBrowser => String::from("10"),
            Self::OperaBrowser => String::from("11"),
            Self::EdgeBrowser => String::from("12"),
            Self::IEBrowser => String::from("13"),
            Self::UnknownBrowser => String::from("14"),
            Self::AndroidAmazon => String::from("15"),
            Self::UWP => String::from("16"),
            Self::SafariBrowser => String::from("17"),
            Self::VivaldiBrowser => String::from("18"),
            Self::VivaldiExtension => String::from("19"),
            Self::SafariExtension => String::from("20"),
            Self::SDK => String::from("21"),
            Self::Server => String::from("22"),
            Self::WindowsCLI => String::from("23"),
            Self::MacOsCLI => String::from("24"),
            Self::LinuxCLI => String::from("25"),
            Self::UnknownValue => String::from("UnknownValue"),
        }
    }
}

impl Default for DeviceType {
    fn default() -> DeviceType {
        Self::Android
    }
}
