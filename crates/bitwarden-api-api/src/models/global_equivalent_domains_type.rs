/*
 * Bitwarden Internal API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 *
 * Generated by: https://openapi-generator.tech
 */

///
#[repr(i64)]
#[derive(
    Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize_repr, Deserialize_repr,
)]
pub enum GlobalEquivalentDomainsType {
    Google = 0,
    Apple = 1,
    Ameritrade = 2,
    BoA = 3,
    Sprint = 4,
    WellsFargo = 5,
    Merrill = 6,
    Citi = 7,
    Cnet = 8,
    Gap = 9,
    Microsoft = 10,
    United = 11,
    Yahoo = 12,
    Zonelabs = 13,
    PayPal = 14,
    Avon = 15,
    Diapers = 16,
    Contacts = 17,
    Amazon = 18,
    Cox = 19,
    Norton = 20,
    Verizon = 21,
    Buy = 22,
    Sirius = 23,
    Ea = 24,
    Basecamp = 25,
    Steam = 26,
    Chart = 27,
    Gotomeeting = 28,
    Gogo = 29,
    Oracle = 30,
    Discover = 31,
    Dcu = 32,
    Healthcare = 33,
    Pepco = 34,
    Century21 = 35,
    Comcast = 36,
    Cricket = 37,
    Mtb = 38,
    Dropbox = 39,
    Snapfish = 40,
    Alibaba = 41,
    Playstation = 42,
    Mercado = 43,
    Zendesk = 44,
    Autodesk = 45,
    RailNation = 46,
    Wpcu = 47,
    Mathletics = 48,
    Discountbank = 49,
    Mi = 50,
    Facebook = 51,
    Postepay = 52,
    Skysports = 53,
    Disney = 54,
    Pokemon = 55,
    Uv = 56,
    Yahavo = 57,
    Mdsol = 58,
    Sears = 59,
    Xiami = 60,
    Belkin = 61,
    Turbotax = 62,
    Shopify = 63,
    Ebay = 64,
    Techdata = 65,
    Schwab = 66,
    Mozilla = 67,
    Tesla = 68,
    MorganStanley = 69,
    TaxAct = 70,
    Wikimedia = 71,
    Airbnb = 72,
    Eventbrite = 73,
    StackExchange = 74,
    Docusign = 75,
    Envato = 76,
    X10Hosting = 77,
    Cisco = 78,
    CedarFair = 79,
    Ubiquiti = 80,
    Discord = 81,
    Netcup = 82,
    Yandex = 83,
    Sony = 84,
    Proton = 85,
    Ubisoft = 86,
    TransferWise = 87,
    TakeawayEU = 88,
    Atlassian = 89,
    Pinterest = 90,
}

impl ToString for GlobalEquivalentDomainsType {
    fn to_string(&self) -> String {
        match self {
            Self::Google => String::from("0"),
            Self::Apple => String::from("1"),
            Self::Ameritrade => String::from("2"),
            Self::BoA => String::from("3"),
            Self::Sprint => String::from("4"),
            Self::WellsFargo => String::from("5"),
            Self::Merrill => String::from("6"),
            Self::Citi => String::from("7"),
            Self::Cnet => String::from("8"),
            Self::Gap => String::from("9"),
            Self::Microsoft => String::from("10"),
            Self::United => String::from("11"),
            Self::Yahoo => String::from("12"),
            Self::Zonelabs => String::from("13"),
            Self::PayPal => String::from("14"),
            Self::Avon => String::from("15"),
            Self::Diapers => String::from("16"),
            Self::Contacts => String::from("17"),
            Self::Amazon => String::from("18"),
            Self::Cox => String::from("19"),
            Self::Norton => String::from("20"),
            Self::Verizon => String::from("21"),
            Self::Buy => String::from("22"),
            Self::Sirius => String::from("23"),
            Self::Ea => String::from("24"),
            Self::Basecamp => String::from("25"),
            Self::Steam => String::from("26"),
            Self::Chart => String::from("27"),
            Self::Gotomeeting => String::from("28"),
            Self::Gogo => String::from("29"),
            Self::Oracle => String::from("30"),
            Self::Discover => String::from("31"),
            Self::Dcu => String::from("32"),
            Self::Healthcare => String::from("33"),
            Self::Pepco => String::from("34"),
            Self::Century21 => String::from("35"),
            Self::Comcast => String::from("36"),
            Self::Cricket => String::from("37"),
            Self::Mtb => String::from("38"),
            Self::Dropbox => String::from("39"),
            Self::Snapfish => String::from("40"),
            Self::Alibaba => String::from("41"),
            Self::Playstation => String::from("42"),
            Self::Mercado => String::from("43"),
            Self::Zendesk => String::from("44"),
            Self::Autodesk => String::from("45"),
            Self::RailNation => String::from("46"),
            Self::Wpcu => String::from("47"),
            Self::Mathletics => String::from("48"),
            Self::Discountbank => String::from("49"),
            Self::Mi => String::from("50"),
            Self::Facebook => String::from("51"),
            Self::Postepay => String::from("52"),
            Self::Skysports => String::from("53"),
            Self::Disney => String::from("54"),
            Self::Pokemon => String::from("55"),
            Self::Uv => String::from("56"),
            Self::Yahavo => String::from("57"),
            Self::Mdsol => String::from("58"),
            Self::Sears => String::from("59"),
            Self::Xiami => String::from("60"),
            Self::Belkin => String::from("61"),
            Self::Turbotax => String::from("62"),
            Self::Shopify => String::from("63"),
            Self::Ebay => String::from("64"),
            Self::Techdata => String::from("65"),
            Self::Schwab => String::from("66"),
            Self::Mozilla => String::from("67"),
            Self::Tesla => String::from("68"),
            Self::MorganStanley => String::from("69"),
            Self::TaxAct => String::from("70"),
            Self::Wikimedia => String::from("71"),
            Self::Airbnb => String::from("72"),
            Self::Eventbrite => String::from("73"),
            Self::StackExchange => String::from("74"),
            Self::Docusign => String::from("75"),
            Self::Envato => String::from("76"),
            Self::X10Hosting => String::from("77"),
            Self::Cisco => String::from("78"),
            Self::CedarFair => String::from("79"),
            Self::Ubiquiti => String::from("80"),
            Self::Discord => String::from("81"),
            Self::Netcup => String::from("82"),
            Self::Yandex => String::from("83"),
            Self::Sony => String::from("84"),
            Self::Proton => String::from("85"),
            Self::Ubisoft => String::from("86"),
            Self::TransferWise => String::from("87"),
            Self::TakeawayEU => String::from("88"),
            Self::Atlassian => String::from("89"),
            Self::Pinterest => String::from("90"),
        }
    }
}

impl Default for GlobalEquivalentDomainsType {
    fn default() -> GlobalEquivalentDomainsType {
        Self::Google
    }
}
