/*
 * Bitwarden Internal API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 *
 * Generated by: https://openapi-generator.tech
 */

///
#[repr(i64)]
#[derive(
    Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize_repr, Deserialize_repr,
)]
pub enum PlanType {
    Free = 0,
    FamiliesAnnually2019 = 1,
    TeamsMonthly2019 = 2,
    TeamsAnnually2019 = 3,
    EnterpriseMonthly2019 = 4,
    EnterpriseAnnually2019 = 5,
    Custom = 6,
    FamiliesAnnually = 7,
    TeamsMonthly2020 = 8,
    TeamsAnnually2020 = 9,
    EnterpriseMonthly2020 = 10,
    EnterpriseAnnually2020 = 11,
    TeamsMonthly2023 = 12,
    TeamsAnnually2023 = 13,
    EnterpriseMonthly2023 = 14,
    EnterpriseAnnually2023 = 15,
    TeamsStarter2023 = 16,
    TeamsMonthly = 17,
    TeamsAnnually = 18,
    EnterpriseMonthly = 19,
    EnterpriseAnnually = 20,
    TeamsStarter = 21,
}

impl ToString for PlanType {
    fn to_string(&self) -> String {
        match self {
            Self::Free => String::from("0"),
            Self::FamiliesAnnually2019 => String::from("1"),
            Self::TeamsMonthly2019 => String::from("2"),
            Self::TeamsAnnually2019 => String::from("3"),
            Self::EnterpriseMonthly2019 => String::from("4"),
            Self::EnterpriseAnnually2019 => String::from("5"),
            Self::Custom => String::from("6"),
            Self::FamiliesAnnually => String::from("7"),
            Self::TeamsMonthly2020 => String::from("8"),
            Self::TeamsAnnually2020 => String::from("9"),
            Self::EnterpriseMonthly2020 => String::from("10"),
            Self::EnterpriseAnnually2020 => String::from("11"),
            Self::TeamsMonthly2023 => String::from("12"),
            Self::TeamsAnnually2023 => String::from("13"),
            Self::EnterpriseMonthly2023 => String::from("14"),
            Self::EnterpriseAnnually2023 => String::from("15"),
            Self::TeamsStarter2023 => String::from("16"),
            Self::TeamsMonthly => String::from("17"),
            Self::TeamsAnnually => String::from("18"),
            Self::EnterpriseMonthly => String::from("19"),
            Self::EnterpriseAnnually => String::from("20"),
            Self::TeamsStarter => String::from("21"),
        }
    }
}

impl Default for PlanType {
    fn default() -> PlanType {
        Self::Free
    }
}
