{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Command",
  "oneOf": [
    {
      "description": "Login with username and password\n\nThis command is for initiating an authentication handshake with Bitwarden. Authorization may fail due to requiring 2fa or captcha challenge completion despite accurate credentials.\n\nThis command is not capable of handling authentication requiring 2fa or captcha.\n\nReturns: [PasswordLoginResponse](bitwarden::auth::response::PasswordLoginResponse)",
      "type": "object",
      "required": [
        "passwordLogin"
      ],
      "properties": {
        "passwordLogin": {
          "$ref": "#/definitions/PasswordLoginRequest"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Login with API Key\n\nThis command is for initiating an authentication handshake with Bitwarden.\n\nReturns: [ApiKeyLoginResponse](bitwarden::auth::response::ApiKeyLoginResponse)",
      "type": "object",
      "required": [
        "apiKeyLogin"
      ],
      "properties": {
        "apiKeyLogin": {
          "$ref": "#/definitions/ApiKeyLoginRequest"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Login with Secrets Manager Access Token\n\nThis command is for initiating an authentication handshake with Bitwarden.\n\nReturns: [ApiKeyLoginResponse](bitwarden::auth::response::ApiKeyLoginResponse)",
      "type": "object",
      "required": [
        "accessTokenLogin"
      ],
      "properties": {
        "accessTokenLogin": {
          "$ref": "#/definitions/AccessTokenLoginRequest"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Login with a previously saved session",
      "type": "object",
      "required": [
        "sessionLogin"
      ],
      "properties": {
        "sessionLogin": {
          "$ref": "#/definitions/SessionLoginRequest"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "> Requires Authentication Get the API key of the currently authenticated user\n\nReturns: [UserApiKeyResponse](bitwarden::platform::UserApiKeyResponse)",
      "type": "object",
      "required": [
        "getUserApiKey"
      ],
      "properties": {
        "getUserApiKey": {
          "$ref": "#/definitions/SecretVerificationRequest"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Get the user's passphrase\n\nReturns: String",
      "type": "object",
      "required": [
        "fingerprint"
      ],
      "properties": {
        "fingerprint": {
          "$ref": "#/definitions/FingerprintRequest"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "> Requires Authentication Retrieve all user data, ciphers and organizations the user is a part of",
      "type": "object",
      "required": [
        "sync"
      ],
      "properties": {
        "sync": {
          "$ref": "#/definitions/SyncRequest"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "secrets"
      ],
      "properties": {
        "secrets": {
          "$ref": "#/definitions/SecretsCommand"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "projects"
      ],
      "properties": {
        "projects": {
          "$ref": "#/definitions/ProjectsCommand"
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "AccessTokenLoginRequest": {
      "description": "Login to Bitwarden with access token",
      "type": "object",
      "required": [
        "accessToken"
      ],
      "properties": {
        "accessToken": {
          "description": "Bitwarden service API access token",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ApiKeyLoginRequest": {
      "description": "Login to Bitwarden with Api Key",
      "type": "object",
      "required": [
        "clientId",
        "clientSecret",
        "password"
      ],
      "properties": {
        "clientId": {
          "description": "Bitwarden account client_id",
          "type": "string"
        },
        "clientSecret": {
          "description": "Bitwarden account client_secret",
          "type": "string"
        },
        "password": {
          "description": "Bitwarden account master password",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "FingerprintRequest": {
      "type": "object",
      "required": [
        "fingerprintMaterial",
        "publicKey"
      ],
      "properties": {
        "fingerprintMaterial": {
          "description": "The input material, used in the fingerprint generation process.",
          "type": "string"
        },
        "publicKey": {
          "description": "The user's public key",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "PasswordLoginRequest": {
      "description": "Login to Bitwarden with Username and Password",
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "description": "Bitwarden account email address",
          "type": "string"
        },
        "password": {
          "description": "Bitwarden account master password",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ProjectCreateRequest": {
      "type": "object",
      "required": [
        "name",
        "organizationId"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "organizationId": {
          "description": "Organization where the project will be created",
          "type": "string",
          "format": "uuid"
        }
      },
      "additionalProperties": false
    },
    "ProjectGetRequest": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "ID of the project to retrieve",
          "type": "string",
          "format": "uuid"
        }
      },
      "additionalProperties": false
    },
    "ProjectPutRequest": {
      "type": "object",
      "required": [
        "id",
        "name",
        "organizationId"
      ],
      "properties": {
        "id": {
          "description": "ID of the project to modify",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "organizationId": {
          "description": "Organization ID of the project to modify",
          "type": "string",
          "format": "uuid"
        }
      },
      "additionalProperties": false
    },
    "ProjectsCommand": {
      "oneOf": [
        {
          "description": "> Requires Authentication > Requires using an Access Token for login or calling Sync at least once Retrieve a project by the provided identifier\n\nReturns: [ProjectResponse](bitwarden::secrets_manager::projects::ProjectResponse)",
          "type": "object",
          "required": [
            "get"
          ],
          "properties": {
            "get": {
              "$ref": "#/definitions/ProjectGetRequest"
            }
          },
          "additionalProperties": false
        },
        {
          "description": "> Requires Authentication > Requires using an Access Token for login or calling Sync at least once Creates a new project in the provided organization using the given data\n\nReturns: [ProjectResponse](bitwarden::secrets_manager::projects::ProjectResponse)",
          "type": "object",
          "required": [
            "create"
          ],
          "properties": {
            "create": {
              "$ref": "#/definitions/ProjectCreateRequest"
            }
          },
          "additionalProperties": false
        },
        {
          "description": "> Requires Authentication > Requires using an Access Token for login or calling Sync at least once Lists all projects of the given organization\n\nReturns: [ProjectsResponse](bitwarden::secrets_manager::projects::ProjectsResponse)",
          "type": "object",
          "required": [
            "list"
          ],
          "properties": {
            "list": {
              "$ref": "#/definitions/ProjectsListRequest"
            }
          },
          "additionalProperties": false
        },
        {
          "description": "> Requires Authentication > Requires using an Access Token for login or calling Sync at least once Updates an existing project with the provided ID using the given data\n\nReturns: [ProjectResponse](bitwarden::secrets_manager::projects::ProjectResponse)",
          "type": "object",
          "required": [
            "update"
          ],
          "properties": {
            "update": {
              "$ref": "#/definitions/ProjectPutRequest"
            }
          },
          "additionalProperties": false
        },
        {
          "description": "> Requires Authentication > Requires using an Access Token for login or calling Sync at least once Deletes all the projects whose IDs match the provided ones\n\nReturns: [ProjectsDeleteResponse](bitwarden::secrets_manager::projects::ProjectsDeleteResponse)",
          "type": "object",
          "required": [
            "delete"
          ],
          "properties": {
            "delete": {
              "$ref": "#/definitions/ProjectsDeleteRequest"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "ProjectsDeleteRequest": {
      "type": "object",
      "required": [
        "ids"
      ],
      "properties": {
        "ids": {
          "description": "IDs of the projects to delete",
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "additionalProperties": false
    },
    "ProjectsListRequest": {
      "type": "object",
      "required": [
        "organizationId"
      ],
      "properties": {
        "organizationId": {
          "description": "Organization to retrieve all the projects from",
          "type": "string",
          "format": "uuid"
        }
      },
      "additionalProperties": false
    },
    "SecretCreateRequest": {
      "type": "object",
      "required": [
        "key",
        "note",
        "organizationId",
        "value"
      ],
      "properties": {
        "key": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "organizationId": {
          "description": "Organization where the secret will be created",
          "type": "string",
          "format": "uuid"
        },
        "projectIds": {
          "description": "IDs of the projects that this secret will belong to",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "value": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "SecretGetRequest": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "ID of the secret to retrieve",
          "type": "string",
          "format": "uuid"
        }
      },
      "additionalProperties": false
    },
    "SecretIdentifiersRequest": {
      "type": "object",
      "required": [
        "organizationId"
      ],
      "properties": {
        "organizationId": {
          "description": "Organization to retrieve all the secrets from",
          "type": "string",
          "format": "uuid"
        }
      },
      "additionalProperties": false
    },
    "SecretPutRequest": {
      "type": "object",
      "required": [
        "id",
        "key",
        "note",
        "organizationId",
        "value"
      ],
      "properties": {
        "id": {
          "description": "ID of the secret to modify",
          "type": "string",
          "format": "uuid"
        },
        "key": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "organizationId": {
          "description": "Organization ID of the secret to modify",
          "type": "string",
          "format": "uuid"
        },
        "value": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "SecretVerificationRequest": {
      "type": "object",
      "properties": {
        "masterPassword": {
          "description": "The user's master password to use for user verification. If supplied, this will be used for verification purposes.",
          "type": [
            "string",
            "null"
          ]
        },
        "otp": {
          "description": "Alternate user verification method through OTP. This is provided for users who have no master password due to use of Customer Managed Encryption. Must be present and valid if master_password is absent.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "SecretsCommand": {
      "oneOf": [
        {
          "description": "> Requires Authentication > Requires using an Access Token for login or calling Sync at least once Retrieve a secret by the provided identifier\n\nReturns: [SecretResponse](bitwarden::secrets_manager::secrets::SecretResponse)",
          "type": "object",
          "required": [
            "get"
          ],
          "properties": {
            "get": {
              "$ref": "#/definitions/SecretGetRequest"
            }
          },
          "additionalProperties": false
        },
        {
          "description": "> Requires Authentication > Requires using an Access Token for login or calling Sync at least once Creates a new secret in the provided organization using the given data\n\nReturns: [SecretResponse](bitwarden::secrets_manager::secrets::SecretResponse)",
          "type": "object",
          "required": [
            "create"
          ],
          "properties": {
            "create": {
              "$ref": "#/definitions/SecretCreateRequest"
            }
          },
          "additionalProperties": false
        },
        {
          "description": "> Requires Authentication > Requires using an Access Token for login or calling Sync at least once Lists all secret identifiers of the given organization, to then retrieve each secret, use `CreateSecret`\n\nReturns: [SecretIdentifiersResponse](bitwarden::secrets_manager::secrets::SecretIdentifiersResponse)",
          "type": "object",
          "required": [
            "list"
          ],
          "properties": {
            "list": {
              "$ref": "#/definitions/SecretIdentifiersRequest"
            }
          },
          "additionalProperties": false
        },
        {
          "description": "> Requires Authentication > Requires using an Access Token for login or calling Sync at least once Updates an existing secret with the provided ID using the given data\n\nReturns: [SecretResponse](bitwarden::secrets_manager::secrets::SecretResponse)",
          "type": "object",
          "required": [
            "update"
          ],
          "properties": {
            "update": {
              "$ref": "#/definitions/SecretPutRequest"
            }
          },
          "additionalProperties": false
        },
        {
          "description": "> Requires Authentication > Requires using an Access Token for login or calling Sync at least once Deletes all the secrets whose IDs match the provided ones\n\nReturns: [SecretsDeleteResponse](bitwarden::secrets_manager::secrets::SecretsDeleteResponse)",
          "type": "object",
          "required": [
            "delete"
          ],
          "properties": {
            "delete": {
              "$ref": "#/definitions/SecretsDeleteRequest"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "SecretsDeleteRequest": {
      "type": "object",
      "required": [
        "ids"
      ],
      "properties": {
        "ids": {
          "description": "IDs of the secrets to delete",
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "additionalProperties": false
    },
    "SessionLoginRequest": {
      "description": "Login to Bitwarden using a saved session",
      "type": "object",
      "required": [
        "password",
        "userId"
      ],
      "properties": {
        "password": {
          "description": "User's master password, used to unlock the vault",
          "type": "string"
        },
        "userId": {
          "description": "User's uuid",
          "type": "string",
          "format": "uuid"
        }
      },
      "additionalProperties": false
    },
    "SyncRequest": {
      "type": "object",
      "properties": {
        "excludeSubdomains": {
          "description": "Exclude the subdomains from the response, defaults to false",
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "additionalProperties": false
    }
  }
}
